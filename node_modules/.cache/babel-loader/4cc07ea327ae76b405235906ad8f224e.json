{"ast":null,"code":"import _slicedToArray from\"C:/Users/Kaustubh/Projects/Personal/kaustubh-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from\"react\";// Validates the first half of an email address.\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var validateText=function validateText(text){// NOTE: Passes RFC 5322 but not tested on google's standard.\n// eslint-disable-next-line no-useless-escape\nvar re=/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))$/;return re.test(text)||text.length===0;};var messages=[\"kaustubh1955\"];var useInterval=function useInterval(callback,delay){var savedCallback=useRef();useEffect(function(){savedCallback.current=callback;},[callback]);useEffect(function(){if(delay){var id=setInterval(function(){savedCallback.current();},delay);return function(){return clearInterval(id);};}return function(){};// pass linter\n},[delay]);};var EmailLink=function EmailLink(){var hold=50;// ticks to wait after message is complete before rendering next message\nvar delay=50;// tick length in mS\nvar _useState=useState(0),_useState2=_slicedToArray(_useState,2),idx=_useState2[0],updateIter=_useState2[1];// points to current message\nvar _useState3=useState(messages[idx]),_useState4=_slicedToArray(_useState3,2),message=_useState4[0],updateMessage=_useState4[1];var _useState5=useState(messages[idx].length),_useState6=_slicedToArray(_useState5,2),char=_useState6[0],updateChar=_useState6[1];// points to current char\nvar _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),isActive=_useState8[0],setIsActive=_useState8[1];// disable when all messages are printed\nuseInterval(function(){var newIdx=idx;var newChar=char;if(char-hold>=messages[idx].length){newIdx+=1;newChar=0;}if(newIdx===messages.length){setIsActive(false);}else{updateMessage(messages[newIdx].slice(0,newChar));updateIter(newIdx);updateChar(newChar+1);}},isActive?delay:null);return/*#__PURE__*/_jsx(\"div\",{className:\"inline-container\",style:validateText(message)?{}:{color:\"red\"},onMouseEnter:function onMouseEnter(){return setIsActive(false);},onMouseLeave:function onMouseLeave(){return idx<messages.length&&setIsActive(true);},children:/*#__PURE__*/_jsxs(\"a\",{href:validateText(message)?\"mailto:\".concat(message,\"@gmail.com\"):\"\",children:[/*#__PURE__*/_jsx(\"span\",{children:message}),/*#__PURE__*/_jsx(\"span\",{children:\"@gmail.com\"})]})});};export default EmailLink;","map":{"version":3,"sources":["C:/Users/Kaustubh/Projects/Personal/kaustubh-website/src/components/Contact/EmailLink.js"],"names":["React","useEffect","useRef","useState","validateText","text","re","test","length","messages","useInterval","callback","delay","savedCallback","current","id","setInterval","clearInterval","EmailLink","hold","idx","updateIter","message","updateMessage","char","updateChar","isActive","setIsActive","newIdx","newChar","slice","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n\r\n// Validates the first half of an email address.\r\nconst validateText = (text) => {\r\n  // NOTE: Passes RFC 5322 but not tested on google's standard.\r\n  // eslint-disable-next-line no-useless-escape\r\n  const re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))$/;\r\n  return re.test(text) || text.length === 0;\r\n};\r\n\r\nconst messages = [\"kaustubh1955\"];\r\n\r\nconst useInterval = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    if (delay) {\r\n      const id = setInterval(() => {\r\n        savedCallback.current();\r\n      }, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n    return () => {}; // pass linter\r\n  }, [delay]);\r\n};\r\n\r\nconst EmailLink = () => {\r\n  const hold = 50; // ticks to wait after message is complete before rendering next message\r\n  const delay = 50; // tick length in mS\r\n\r\n  const [idx, updateIter] = useState(0); // points to current message\r\n  const [message, updateMessage] = useState(messages[idx]);\r\n  const [char, updateChar] = useState(messages[idx].length); // points to current char\r\n  const [isActive, setIsActive] = useState(true); // disable when all messages are printed\r\n\r\n  useInterval(\r\n    () => {\r\n      let newIdx = idx;\r\n      let newChar = char;\r\n      if (char - hold >= messages[idx].length) {\r\n        newIdx += 1;\r\n        newChar = 0;\r\n      }\r\n      if (newIdx === messages.length) {\r\n        setIsActive(false);\r\n      } else {\r\n        updateMessage(messages[newIdx].slice(0, newChar));\r\n        updateIter(newIdx);\r\n        updateChar(newChar + 1);\r\n      }\r\n    },\r\n    isActive ? delay : null\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className=\"inline-container\"\r\n      style={validateText(message) ? {} : { color: \"red\" }}\r\n      onMouseEnter={() => setIsActive(false)}\r\n      onMouseLeave={() => idx < messages.length && setIsActive(true)}\r\n    >\r\n      <a href={validateText(message) ? `mailto:${message}@gmail.com` : \"\"}>\r\n        <span>{message}</span>\r\n        <span>@gmail.com</span>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailLink;\r\n"]},"metadata":{},"sourceType":"module"}